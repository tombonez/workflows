name: Deployer

on:
  workflow_call:
    inputs:
      deployer-version:
        default: "7.4.0"
        required: false
        type: string
      environment:
        required: true
        type: string
      php-version:
        required: true
        type: string
      run-bun:
        default: false
        required: false
        type: boolean
      run-composer:
        default: false
        required: false
        type: boolean
      run-npm:
        default: false
        required: false
        type: boolean
      update-browserslist:
        default: false
        required: false
        type: boolean
      use-composer-auth:
        default: false
        required: false
        type: boolean
      use-cloudflared:
        default: false
        required: false
        type: boolean
      website-url:
        required: true
        type: string
    secrets:
      composer-auth-json:
        required: false
      private-key:
        required: true
      slack-webhook:
        required: true
      ssh-config:
        required: false

jobs:
  deploy:
    environment:
      name: ${{ inputs.environment }}
      url: ${{ inputs.website-url }}

    runs-on: ubuntu-latest

    steps:
      - name: Use Checkout
        uses: actions/checkout@v4.2.2

      - name: Use PHP ${{ inputs.php-version }} With Composer 2
        uses: shivammathur/setup-php@2.31.1
        with:
          php-version: ${{ inputs.php-version }}
          tools: composer:v2

      - name: Get Composer Cache Directory
        if: ${{ inputs.run-composer }}
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Use Composer Cache Directory
        if: ${{ inputs.run-composer }}
        uses: actions/cache@v4.1.2
        with:
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          path: ${{ steps.composer-cache.outputs.dir }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Validate Composer Files
        if: ${{ inputs.run-composer }}
        run: composer validate

      - name: Add Composer Authentication
        if: ${{ inputs.use-composer-auth }}
        run: echo '${{ secrets.composer-auth-json }}' >> $GITHUB_WORKSPACE/auth.json

      - name: Install Composer Dependencies
        if: ${{ inputs.run-composer }}
        run: composer install --no-dev --no-interaction --no-progress --optimize-autoloader --prefer-dist --verbose

      - name: Remove Composer Authentication
        if: ${{ inputs.use-composer-auth }}
        run: rm -f $GITHUB_WORKSPACE/auth.json

      - name: Use Bun
        if: ${{ inputs.run-bun }}
        uses: oven-sh/setup-bun@v2.0.1

      - name: Install Bun Dependencies
        if: ${{ inputs.run-bun }}
        run: bun install --frozen-lockfile

      - name: Update Browserslist (Bun)
        if: ${{ inputs.run-bun && inputs.update-browserslist }}
        run: echo "Not implemented yet"

      - name: Run Bun Production
        if: ${{ inputs.run-bun }}
        run: bun run production

      - name: Use Node.js
        if: ${{ inputs.run-npm }}
        uses: actions/setup-node@v4.1.0
        with:
          cache: "npm"
          node-version-file: ".nvmrc"

      - name: Install Node.js Dependencies
        if: ${{ inputs.run-npm }}
        run: npm ci

      - name: Update Browserslist (NPM)
        if: ${{ inputs.run-npm && inputs.update-browserslist }}
        run: npx browserslist@latest --update-db

      - name: Run NPM Production
        if: ${{ inputs.run-npm }}
        run: npm run production

      - name: Convert Environment Input To Lowercase
        id: environment
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ inputs.environment }}

      - name: Install Cloudflared
        if: ${{ inputs.use-cloudflared }}
        run: |
          curl -L -o /usr/local/bin/cloudflared https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64
          chmod +x /usr/local/bin/cloudflared

      - name: Deploy
        uses: deployphp/action@v1.0.23
        with:
          dep: deploy -o slack_webhook=${{ secrets.slack-webhook }} --revision=${{ github.sha }} ${{ steps.environment.outputs.lowercase }}
          deployer-version: ${{ inputs.deployer-version }}
          private-key: ${{ secrets.private-key }}
          ssh-config: ${{ secrets.ssh-config || '' }}
